[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Confirm",
    "section": "",
    "text": "[DRAFT] A catalog of several million tasks Pythia can do.\n\n\n\n\n\n\n\n\n\nJun 12, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nvscode ipynb\n\n\n\n\n\n\n\n\n\nJun 9, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nA Quarto Page Layout Example\n\n\n\n\n\n\n\n\n\nJun 9, 2023\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post2.html",
    "href": "posts/post2.html",
    "title": "vscode ipynb",
    "section": "",
    "text": "advice on using notebooks and vscode with quarto\nwriting from a jupyter notebook .ipynb instead of .qmd.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.random.normal(size=10000)\nplt.hist(x, bins=100)\nplt.show()\n\n\n\n\n\n\nFigure 1: graphhhh\n\n\n\n\n\nCode\nimport pandas as pd\niris = pd.read_csv('https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv')\niris.sample(10)\n\n\n\n\n\n\n\nTable 1: Iris\n\n\n\nsepal_length\nsepal_width\npetal_length\npetal_width\nspecies\n\n\n\n\n135\n7.7\n3.0\n6.1\n2.3\nvirginica\n\n\n141\n6.9\n3.1\n5.1\n2.3\nvirginica\n\n\n78\n6.0\n2.9\n4.5\n1.5\nversicolor\n\n\n115\n6.4\n3.2\n5.3\n2.3\nvirginica\n\n\n114\n5.8\n2.8\n5.1\n2.4\nvirginica\n\n\n118\n7.7\n2.6\n6.9\n2.3\nvirginica\n\n\n121\n5.6\n2.8\n4.9\n2.0\nvirginica\n\n\n69\n5.6\n2.5\n3.9\n1.1\nversicolor\n\n\n112\n6.8\n3.0\n5.5\n2.1\nvirginica\n\n\n120\n6.9\n3.2\n5.7\n2.3\nvirginica"
  },
  {
    "objectID": "posts/obvious_completions.html",
    "href": "posts/obvious_completions.html",
    "title": "[DRAFT] A catalog of several million tasks Pythia can do.",
    "section": "",
    "text": "Much of mechanistic interpretability either focuses on toy tasks in toy models. 1 (cite a bunch of examples, transformer circuits, other toy work, sparse transformers, jermyn paper). Other work focuses on small datasets of realistic prompts applied to real-world large language model. (cite IOI, alpaca das, rome, acdc, greater-than, …).\nTo add a new approach, we would like to scale up interpretability methods to a large dataset of tasks focused on real models.\nTo that end, we’re sharing two datasets:\n\na dataset of token-bigram and token-trigram statistics from The Pile (CITE) including tables of one and two token prompts with their most likely completions.\nan input scanning dataset that uses the Pythia 2.8B model to determine which tokens are extremely predictive in context.\n\nThe construction of both datasets is unsupervised. The input scanning dataset covers ~100M tokens of The Pile and could be extended to the full dataset if desired."
  },
  {
    "objectID": "posts/obvious_completions.html#introduction",
    "href": "posts/obvious_completions.html#introduction",
    "title": "[DRAFT] A catalog of several million tasks Pythia can do.",
    "section": "",
    "text": "Much of mechanistic interpretability either focuses on toy tasks in toy models. 1 (cite a bunch of examples, transformer circuits, other toy work, sparse transformers, jermyn paper). Other work focuses on small datasets of realistic prompts applied to real-world large language model. (cite IOI, alpaca das, rome, acdc, greater-than, …).\nTo add a new approach, we would like to scale up interpretability methods to a large dataset of tasks focused on real models.\nTo that end, we’re sharing two datasets:\n\na dataset of token-bigram and token-trigram statistics from The Pile (CITE) including tables of one and two token prompts with their most likely completions.\nan input scanning dataset that uses the Pythia 2.8B model to determine which tokens are extremely predictive in context.\n\nThe construction of both datasets is unsupervised. The input scanning dataset covers ~100M tokens of The Pile and could be extended to the full dataset if desired."
  },
  {
    "objectID": "posts/obvious_completions.html#bigrams-and-trigrams",
    "href": "posts/obvious_completions.html#bigrams-and-trigrams",
    "title": "[DRAFT] A catalog of several million tasks Pythia can do.",
    "section": "Bigrams and Trigrams",
    "text": "Bigrams and Trigrams\nWe process the entire deduplicated Pile for bigram and trigram counts. [link to the code for a further description of the construction of the dataset]…\nSome whitespace token bigrams will also tokenize as a single token. For example, with the GPT-NeoX tokenizer, \\n\\n\\t\\t is a token, \\t is a token and \\n\\n\\t\\t\\t is also token. This can cause problems when automatically tokenizing many prompts.\n\nTODO: List lots of facts about the data: number of rows, number of bigrams/trigrams, percent that are highly predictive. a few graphs of the data."
  },
  {
    "objectID": "posts/obvious_completions.html#input-scanning",
    "href": "posts/obvious_completions.html#input-scanning",
    "title": "[DRAFT] A catalog of several million tasks Pythia can do.",
    "section": "Input scanning",
    "text": "Input scanning\nAn unsupervised method for finding examples of a model’s predictive capabilities.\nWe scan through the pre-training corpus \\({t_0,...,t_N}\\) and compare the output of the model on a pair of prompts: - \\(p_0 = [t_i, ... t_{i + n}]\\) is a contiguous \\(n\\)-token prompt from the pre-training corpus. - \\(p_1 = [t_{i-1}, t_i, ... t_{i + n}]\\) is an \\((n+1)\\)-token prompt where an additional token, \\(t_{i-1}\\) has been added in the backwards direction in the text.\nWhen \\(M(p_1)\\) differs substantially from \\(M(p_0)\\), we capture the two prompts as a “task” that the model has succeeded at regardless of whether the model is correct or not. To be more precise, we accept the task if:\n\\[\\mathrm{JSD}(M(p_1), M(p_2)) &gt; 0.5\\]\nwhere JSD is the Jensen-Shannon Divergence. By focusing on tasks for which the addition of \\(t_{i - 1}\\) to the prompt had a large influence, we expect to find\n\nTODO: List lots of facts about the data: number of rows, number of bigrams/trigrams, percent that are highly predictive. a few graphs of the data.\n\nTODO: Examples of input…"
  },
  {
    "objectID": "posts/obvious_completions.html#what-were-using-these-datasets-for",
    "href": "posts/obvious_completions.html#what-were-using-these-datasets-for",
    "title": "[DRAFT] A catalog of several million tasks Pythia can do.",
    "section": "What we’re using these datasets for?",
    "text": "What we’re using these datasets for?\nThere’s a lot we want to do with this data.\n\nProducing a mechanistic map of a model’s internals:\n\nMapping out the features and circuits responsible for each task.\nAre there patterns to\nThis map will\n\nUsing the dataset as a benchmark for automated circuit identification algorithms like (ACDC, boundless DAS).\nLook for inputs that activate portions of the network for which we don’t have any activators yet.\nFinding examples of superposition in the wild. The number of tasks available via input scanning exceeds the number of neurons in Pythia 2.8B (TODO: how many?). Therefore, we should be able to find directions in activation space that interfere."
  },
  {
    "objectID": "posts/obvious_completions.html#footnotes",
    "href": "posts/obvious_completions.html#footnotes",
    "title": "[DRAFT] A catalog of several million tasks Pythia can do.",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nWe do not aim to criticize such work, only to contrast. There is clearly immense potential in toy model.↩︎"
  },
  {
    "objectID": "posts/post1.html",
    "href": "posts/post1.html",
    "title": "A Quarto Page Layout Example",
    "section": "",
    "text": "This document demonstrates the use of a number of advanced page layout features to produce an attractive and usable document inspired by the Tufte handout style and the use of Tufte’s styles in RMarkdown documents (Xie, Allaire, and Grolemund 2018). The Tufte handout style is a style that Edward Tufte uses in his books and handouts. Tufte’s style is known for its extensive use of sidenotes, tight integration of graphics with text, and well-set typography. Quarto1 supports most of the layout techniques that are used in the Tufte handout style for both HTML and LaTeX/PDF output.1 To learn more, you can read more about Quarto or visit Quarto’s Github repository.\n\nXie, Yihui, J. J. Allaire, and Garrett Grolemund. 2018. “Tufte Handouts.” In R Markdown: The Definitive Guide, 137–46. Chapman; Hall/CRC. https://doi.org/10.1201/9781138359444-6.\n---\ntitle: \"An Example Using the Tufte Style\"\nauthor: \"John Smith\"\nformat:\n  html:\n    grid:\n1      margin-width: 350px\n  pdf: default\n2reference-location: margin\ncitation-location: margin\n---\n\n1\n\nIncreases the width of the margin to make more room for sidenotes and margin figures (HTML only).\n\n2\n\nPlaces footnotes and cited sources in the margin. Other layout options (for example placing a figure in the margin) will be set per element in examples below.\n\n\nThese layout features are designed with two important goals in mind:\n\nTo produce both PDF and HTML output with similar styles from the same Quarto document;\nTo provide simple syntax to write elements of the Tufte style such as side notes and margin figures. If you’d like a figure placed in the margin, just set the option fig-column: margin for your code chunk, and we will take care of the details for you2.\n\n2 You never need to think about \\begin{marginfigure} or &lt;span class=\"marginfigure\"&gt;; the LaTeX and HTML code under the hood may be complicated, but you never need to learn or write such code.If you have any feature requests or find bugs in these capabilities, please do not hesitate to file them to https://github.com/quarto-dev/quarto-cli/issues."
  },
  {
    "objectID": "posts/post1.html#margin-figures",
    "href": "posts/post1.html#margin-figures",
    "title": "A Quarto Page Layout Example",
    "section": "Margin Figures",
    "text": "Margin Figures\nImages and graphics play an integral role in Tufte’s work. To place figures in the margin you can use the Quarto chunk option column: margin. For example:\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  figsize=(2,2),\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis\n\n\n\nNote the use of the fig-cap chunk option to provide a figure caption. You can adjust the proportions of figures using the fig-width and fig-height chunk options. These are specified in inches, and will be automatically scaled down to fit within the handout margin."
  },
  {
    "objectID": "posts/post1.html#arbitrary-margin-content",
    "href": "posts/post1.html#arbitrary-margin-content",
    "title": "A Quarto Page Layout Example",
    "section": "Arbitrary Margin Content",
    "text": "Arbitrary Margin Content\nYou can include anything in the margin by places the class .column-margin on the element. See an example on the right about the first fundamental theorem of calculus.\n\n\nWe know from the first fundamental theorem of calculus that for \\(x\\) in \\([a, b]\\):\n\\[\\frac{d}{dx}\\left( \\int_{a}^{x} f(u)\\,du\\right)=f(x).\\]"
  },
  {
    "objectID": "posts/post1.html#full-width-figures",
    "href": "posts/post1.html#full-width-figures",
    "title": "A Quarto Page Layout Example",
    "section": "Full Width Figures",
    "text": "Full Width Figures\nYou can arrange for figures to span across the entire page by using the chunk option fig-column: page-right.\n\n\nCode\nx = np.linspace(0, 2, 100)\nplt.figure(figsize=(11,3))\nplt.subplot(1,3,1)\nplt.plot(x, np.cos(x))\nplt.subplot(1,3,2)\nplt.plot(x, np.sin(x))\nplt.subplot(1,3,3)\nplt.plot(x, np.tan(x))\n\n\n\n\n\nFigure 2: A full width figure.\n\n\n\n\nOther chunk options related to figures can still be used, such as fig-width, fig-cap, and so on. For full width figures, usually fig-width is large and fig-height is small. In the above example, the plot size is \\(11 \\times 3\\)."
  },
  {
    "objectID": "posts/post1.html#arbitrary-full-width-content",
    "href": "posts/post1.html#arbitrary-full-width-content",
    "title": "A Quarto Page Layout Example",
    "section": "Arbitrary Full Width Content",
    "text": "Arbitrary Full Width Content\nAny content can span to the full width of the page, simply place the element in a div and add the class column-page-right. For example, the following code will display its contents as full width.\n::: {.fullwidth}\nAny _full width_ content here.\n:::\nBelow is an example:\n\nR is free software and comes with ABSOLUTELY NO WARRANTY. You are welcome to redistribute it under the terms of the GNU General Public License versions 2 or 3. For more information about these matters see https://www.gnu.org/licenses/."
  },
  {
    "objectID": "posts/post1.html#main-column-figures",
    "href": "posts/post1.html#main-column-figures",
    "title": "A Quarto Page Layout Example",
    "section": "Main Column Figures",
    "text": "Main Column Figures\nBesides margin and full width figures, you can of course also include figures constrained to the main column. This is the default type of figures in the LaTeX/HTML output.\n\n\nCode\nx = np.random.normal(size=10000)\nplt.hist(x, bins=100)\nplt.show()\n\n\n\n\n\nFigure 3: A figure in the main column."
  },
  {
    "objectID": "posts/post1.html#margin-captions",
    "href": "posts/post1.html#margin-captions",
    "title": "A Quarto Page Layout Example",
    "section": "Margin Captions",
    "text": "Margin Captions\nWhen you include a figure constrained to the main column, you can choose to place the figure’s caption in the margin by using the cap-location chunk option. For example:\n\n\nCode\nx = np.random.normal(size=10000)\nplt.hist(x, bins=100)\nplt.show()\n\n\n\n\n\nFigure 4: A figure with a longer caption. The figure appears in the main column, but the caption is placed in the margin. Captions can even contain elements like a citation such as Xie, Allaire, and Grolemund (2018).\nXie, Yihui, J. J. Allaire, and Garrett Grolemund. 2018. “Tufte Handouts.” In R Markdown: The Definitive Guide, 137–46. Chapman; Hall/CRC. https://doi.org/10.1201/9781138359444-6."
  }
]